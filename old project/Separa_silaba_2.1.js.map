{"version": 3, "mappings": "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", "sources": ["Separa_silaba_2.1.py"], "names": ["lista", "l\u00c3a_arquivo", "nome1", "input", "nome2", "nome1.lower", "nome2.lower", "separa_silaba", "nome_final", "aleatorio", "L", "N1", "L.append", "i", "N2", "nome", "numeros", "silabas", "quant", "terminou", "esta_N1", "esta_N2", "num", "randint", "L.length", "L[num].lower", "L[num].lower().capitalize", "silabas.append", "numeros.append", "silabas.length", "V", "E", "silaba", "palavra", "N", "N.length", "palavra.append", "(silaba + N[i]).length", "arquivo", "open", "a", "arquivo.readline", "a.split", "arquivo.close", "lista.length"], "sourcesContent": ["from random import randint\n\n\ndef main():\n    lista = l\u00c3\u00aa_arquivo()\n    nome1 = input(\"Digite um nome: \")\n    nome2 = input(\"Digite outro nome: \")\n    nome1 = nome1.lower()\n    nome2 = nome2.lower()\n    nome1 = separa_silaba(nome1, lista)\n    nome2 = separa_silaba(nome2, lista)\n    nome_final = aleatorio(nome1, nome2)\n    print(nome_final)\n\n\ndef aleatorio(N1, N2):\n    L = []\n    for i in N1:\n        L.append(i)\n    for i in N2:\n        L.append(i)\n    nome = ''\n    numeros = []\n    silabas = []\n    i = 0\n    quant = 4\n    terminou = False\n    esta_N1 = 0\n    esta_N2 = 0\n    while i < quant and not terminou:\n        num = randint(0, len(L) - 1)\n        if num not in numeros:\n            if i == 0:\n                nome += L[num].lower().capitalize()\n                silabas.append(L[num])\n            else:\n                nome += L[num]\n                silabas.append(L[num])\n            numeros.append(num)\n            i += 1\n        if i == quant:\n            for i in range(len(silabas)):\n                if silabas[i] in N1:\n                    esta_N1 += 1\n                else:\n                    esta_N2 += 1\n            if esta_N1 == esta_N2:\n                terminou = True\n            else:\n                esta_N1 = 0\n                esta_N2 = 0\n                i = 0\n                nome = ''\n                numeros = []\n                silabas = []\n\n    return nome\n\n\ndef separa_silaba(N, L):\n    \"\"\"\n    C+V+R+S: se R for C, com C != L = ['l', 'r', 'n', 'm', 's', 'z', 'x'] cortar\n    em V. Se C e L, continuar lendo. Se R == C, CeL e S == V, formar duas silabas, C+V\n    e R+S, caso contrario formar C+V e ler a partir de R.\n\n    V+C+R+S: se C != L, cortar em V, caso contr\u00c3\u00a1rio, continuar lendo. Se R == V,\n    cortar em R, se R == C, continuar lendo, se S==V, cortar em R e formar as sila-\n    bas V e C+R+S (c+c+v). Se R == V\n    \n    \n    Exemplo: palha\u00c3\u00a7o - Formato C+V+C+C+V+C+V\n    Leitura: C + V, R = CeL -> continua lendo. S = C, forma C+V -> Le a partir de R.\n    Silaba formada: 'pa-'\n    \"\"\"\n    V = ['a', 'e', 'i', 'o', 'u']\n    E = ['l', 'm', 'n', 'r', 's', 'x', 'z']\n    silaba = ''\n    palavra = []\n    if N[0] in V:  #COME\u00c3\u2021A COM VOGAL\n        for i in range(len(N)):\n            #print(silaba+N[i], \"nada\", silaba+N[i] in L)\n            if silaba + N[i] in L:\n                print(N[i], silaba)\n                silaba += N[i]\n                #print(silaba, 'IF')\n                if i == len(N) - 1:\n                    print(\"entrou\", 1)\n                    palavra.append(silaba)\n            elif len(silaba + N[i]) == 3 and silaba + N[i] not in L:\n                if silaba[0] in V and silaba[1] + N[i] in L:\n                    #print(silaba[0], silaba[1]+N[i], 'ELIF')\n                    palavra.append(silaba[0])\n                    silaba = silaba[1] + N[i]\n                    if i == len(N) - 1:\n                        print(\"entrou\", 2)\n                        palavra.append(silaba)\n                elif silaba[0] in L and silaba[1] + N[\n                        i] not in L:  #PODERIA SER ELSE\n                    #print(silaba, N[i], \"ELIF ELIF\")\n                    palavra.append(silaba)\n                    silaba = ''\n                    silaba += N[i]\n                    if i == len(N) - 1:\n                        print(\"entrou\", 3)\n                        palavra.append(silaba)\n            elif len(silaba + N[i]) == 4:\n                if silaba[0] + silaba[1] in L and silaba[2] + N[i] in L:\n                    #print(silaba[0]+silaba[1], silaba[2]+N[i], \"ELIF IF\")\n                    palavra.append(silaba[0] + silaba[1])\n                    silaba = silaba[2] + N[i]\n                    if i == len(N) - 1:\n                        print(\"entrou\", 4)\n                        palavra.append(silaba)\n                elif silaba in L and N[i] in L:\n                    #print(silaba, N[i], \"ELIF ELIF2\")\n                    palavra.append(silaba)\n                    silaba = N[i]\n                    if i == len(N) - 1:\n                        print(\"entrou\", 5)\n                        palavra.append(silaba)\n            elif len(silaba + N[i]) == 5:\n                if silaba[0] + silaba[1] + silaba[2] in L and silaba[3] + N[\n                        i] in L:\n                    #print(silaba[0]+silaba[1]+silaba[2], silaba[3]+N[i], \"ELIF5 IF\")\n                    palavra.append(silaba[0] + silaba[1] + silaba[2])\n                    silaba = silaba[3] + N[i]\n                    if i == len(N) - 1:\n                        print(\"entrou\", 6)\n                        palavra.append(silaba)\n            else:\n                palavra.append(silaba)\n                silaba = ''\n                silaba += N[i]\n                #print(silaba, 'ELSE')\n\n    else:  #COME\u00c3\u2021A COM CONSOANTE\n        for i in range(len(N)):\n            #print(silaba+N[i], \"nada\", silaba+N[i] in L)\n            if silaba + N[i] in L:\n                silaba += N[i]\n                #print(silaba)\n                if i == len(N) - 1:\n                    print(\"entrou\", 7)\n                    palavra.append(silaba)\n            elif len(silaba + N[i]) == 3 and silaba + N[i] not in L:\n                if silaba[0] in V and silaba[1] + N[i] in L:\n                    #print(silaba[0], silaba[1]+N[i], 'ELIF')\n                    palavra.append(silaba[0])\n                    #palavra.append(silaba[1]+N[i])\n                    silaba = silaba[1] + N[i]\n                    if i == len(N) - 1:\n                        print(\"entrou\", 8)\n                        palavra.append(silaba)\n                elif silaba[0] in L and silaba[1] + N[\n                        i] not in L:  #PODERIA SER ELSE\n                    #print(silaba, N[i], \"ELIF ELIF\")\n                    palavra.append(silaba)\n                    silaba = ''\n                    silaba += N[i]\n                    if i == len(N) - 1:\n                        #print(\"SILABA\")\n                        print(\"entrou\", 9)\n                        palavra.append(silaba)\n            elif len(silaba + N[i]) == 4:\n                if i < len(N) - 2:\n                    if silaba in L and N[i] + N[i + 1] + N[i + 2] in L:\n                        #print(\"cond. espec.\")\n                        print(\"entrou\", 10)\n                        palavra.append(silaba)\n                        silaba = N[i]\n                    elif silaba[0] + silaba[1] in L and silaba[2] + N[i] in L:\n                        #print(silaba[0]+silaba[1], silaba[2]+N[i], \"ELIF IF\")\n                        palavra.append(silaba[0] + silaba[1])\n                        silaba = silaba[2] + N[i]\n                        if i == len(N) - 1:\n                            print(\"entrou\", 11)\n                            palavra.append(silaba)\n                    elif silaba in L and N[i] in L:\n                        #print(silaba, N[i], \"ELIF ELIF2\")\n                        palavra.append(silaba)\n                        silaba = N[i]\n                        if i == len(N) - 1:\n                            print(\"entrou\", 12)\n                            palavra.append(silaba)\n\n                else:\n                    if silaba[0] + silaba[1] in L and silaba[2] + N[i] in L:\n                        #print(silaba[0]+silaba[1], silaba[2]+N[i], \"ELIF IF\")\n                        palavra.append(silaba[0] + silaba[1])\n                        silaba = silaba[2] + N[i]\n                        if i == len(N) - 1:\n                            print(\"entrou\", 13)\n                            palavra.append(silaba)\n                    elif silaba in L and N[i] in L:\n                        #print(silaba, N[i], \"ELIF ELIF2\")\n                        palavra.append(silaba)\n                        silaba = N[i]\n                        if i == len(N) - 1:\n                            print(\"entrou\", 14)\n                            palavra.append(silaba)\n\n            else:\n                palavra.append(silaba)\n                #print(silaba)\n                silaba = ''\n                silaba += N[i]\n                if i == len(N) - 1:\n                    print(\"entrou\", 15)\n                    palavra.append(silaba)\n            #print(silaba in L)\n\n    return (palavra)\n\n\ndef l\u00c3\u00aa_arquivo():\n    lista = []\n    arquivo = open(\"SILABAS_FINAL.txt\", \"r\")\n    a = arquivo.readline()\n    lista = a.split()\n    arquivo.close()\n    print(len(lista))\n\n    return lista\n\n\nmain()\n"]}